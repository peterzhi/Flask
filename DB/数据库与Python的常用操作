#数据库查询:
users = User.query.all() #相当于select * from User

user1 = User.query.get(2) #返回表中的第二个用户对象

#条件查询:
#模型类.query.filter(模型名.字段名 == 值).all()，返回的是一个列表
#模型类.query.filter(模型名.字段名 == 值).first(),返回的是一个对象
#模型类.query.filter_by(字段名 = 值) <=> "select * from user where 字段名='xxx'",加上first():查询的第一条记录
user_list = User.query.filter_by(username = u_name)
user1 = User.query.filter(User.username == 'wangwu').all()

模型类.query.filter():
1.检索字段为str类:
user.username.startswith('')
User-username.endswith('')
User.username.contains('')
User.username.like(' ')
User.username.in_(L'',''，''])
User.username == 'zzz'

2.检索字段为int/datetime类:
User.age.__lt__(18)
User.rdatetime.__gt__'.....' )
User.age.__le__(18)
User.age.__ge__(18)
User.age.between(15,30)

3.多条件检索:与:and_(),或:or_()，非:not_()

4.排序:order_by(参数):
    1.参数为str:'字段名'(不能逆序);
    2.参数为变量:模型名.字段名(顺序), -模型名.字段名(逆序);
user_list = User.query.filter(User.username.contains('z')).order_by(User.id).all()

5.限制:limit,offset()表示从头开始的偏移量 I
user_list = User.query.limit(2).all()            默认获取前两条
user_list = User.query.offset(2).limit(2).all()  跳过2条记录再获取两条记录


#删除操作
#1.逻辑删除(定义table时添加一个字段'isdelete'表示数据是否可见)
id = request.args.get(id)
user = User.query.get(id)
user.isdelete = True
db.seesion.commit()

#2.物理删除(从数据库中删除)
id = request.args.get(id)
user = User.query.get(id)
db.seesion.delete(user)
db.seesion.commit()


#更新操作
id = request.args.get(id)
user = User.query.get(id)
#修改对象属性
user.phone = phone
user.username = username
#提交修改操作
db.session.commit()

