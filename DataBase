
#数据库(下载flask-script)
pip install flask-script

#使用Manager类进行命令管理:
manager = Manager(app = app)
manager.run()

#终端开启服务器:
app.py runserver  /  app.py runserver -h 0.0.0.1 -p 5001

#自定义添加命令:
@manager.command
def init():
    print('初始化')
#终端运行:app.py init

#1.安装：
#安装pymysql
#完成flask app到DB的ORM映射方式的链接:下载flask-sqlalchemy
pip install flask-sqlalchemy
#安装发布数据库命令的工具:flask-migrate
pip install flask-migrate

#2.配置数据库
#mysql(数据库) + (驱动)pymysql://(用户名)user:(密码)password@(ip)host_ip:(端口号)port/(库名称)databasename
SQLALCHEMY_DATABASE_URI = 'mysql+pymysql://root:root@127.0.0.1:3306/Flask_demo'
SQLALCHEMY_TRACK_MODIFICATIONS = False
SQLALCHEMY_ECHO = True
    
#3.创建ext包,在init.py中进行Sqlalchemy与app的关联
#两种方式: 1.db = SQLAlchemy(app);  2.db = SQLAlchemy()  在工厂函数中关联:db.init_app(app=app)

#4.命令工具的链接
migrate = Migrate(app=app, db=db)
manager.add_command('db', MigrateCommand)

#5.创建模型models.py
#db.Column(类型,约束):映射表中的列属性
class User(db.Model):
    id = db.Column(db.Integer, primary_key=True, autoincrement=True)
    username = db.Column(db.String(15), nullable=False)
    password = db.Column(db.String(12), nullable=False)
    phone = db.Column(db.String(11), unique=True)
    rdatetime = db.Column(db.DateTime, default=datetime.now)

#6.使用命令
#在app.py文件中导入模型:from apps.user.models import User
#然后再终端使用命令:app.py db init,产生Migrations文件夹
#再使用终端命令:app.py db migrate，自动产生一个版本文件
